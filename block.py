# -*- coding: utf-8 -*-
"""Block.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bNwW79i8l2jlWfc2HjylfrMhmRh_frmG
"""

import hashlib

def hashGenerator(data):
  result = hashlib.sha256(data.encode())
  return result.hexdigest()

class Block:
  def __init__(self,data,hash,prev_hash):
    self.data=data
    self.hash=hash
    self.prev_hash=prev_hash

class Blockchain:
  def __init__(self):
    hashLast = hashGenerator('gen_last')
    hashStart = hashGenerator('gen_hash')
    genesis = Block('gen-data',hashStart,hashLast)
    self.chain = [genesis]
  def add_block(self,data):

      prev_hash  = self.chain[-1].hash
      hash = hashGenerator(data+prev_hash)
      block = Block(data,hash,prev_hash)
      self.chain.append(block)

bc = Blockchain()
bc.add_block('1')
bc.add_block('2')
bc.add_block('3')
bc.add_block('Zain')

for block in bc.chain:
  print(block.__dict__)

